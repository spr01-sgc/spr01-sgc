/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.soma.transmisor.controller;

import org.springframework.security.authentication.AuthenticationTrustResolver;
import org.springframework.security.authentication.AuthenticationTrustResolverImpl;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

/**
 *
 * @author LUIS-SOMA
 */
@Controller
@RequestMapping("/")
public class ControllerPago {


    @RequestMapping(value = {"/pago"}, method = RequestMethod.GET)
    public String pago(ModelMap model) {
        if (!estaUsuarioAnonimo()) {
            //trae los datos de la tabla entidad
            /*List<Entidad> lEntidad = entidadService.showEntidad();
            List<CodigoPostal> lCodigoPostal = codigoPostalService.showCodigoPostal();
            List<Sexo> lSexo = sexoService.showSexo();
            List<TipoTelefono> lTipoTelefono = tipoTelefonoService.showTipoTelefono();
           // List<Telefono> lTelefono = telefonoService.showTelefono();
            // enviar los datos JSP
            model.addAttribute("lEntidad", lEntidad);
            model.addAttribute("lCodigoPostal", lCodigoPostal);
            model.addAttribute("lSexo", lSexo);
            model.addAttribute("lTipoTelefono", lTipoTelefono);
            //model.addAttribute("lTelefono", lTelefono);*/

            return "pago";
        }
        return "login";
    }

    

    /**
     * Este metodo traera de la sesion iniciada.
     *
     * @return
     */
    public String usuarioEnSesion() {

        Object principal = SecurityContextHolder.getContext().getAuthentication().getPrincipal();

        String nicknamePrincipal = null;

        if (principal instanceof UserDetails) {
            //Es igual al usuario que esta en sesion
            return nicknamePrincipal = ((UserDetails) principal).getUsername();
        } else {
            //Es igual a usuario anonimo
            return nicknamePrincipal = principal.toString();
        }
    }

    /**
     * Este metodo verificara que un usuario este autenticado correctamente
     */
    private boolean estaUsuarioAnonimo() {
        final Authentication autenticacion = SecurityContextHolder.getContext().getAuthentication();

        AuthenticationTrustResolver authenticationTrustResolver = new AuthenticationTrustResolverImpl();
        return authenticationTrustResolver.isAnonymous(autenticacion);
    }
     
}
