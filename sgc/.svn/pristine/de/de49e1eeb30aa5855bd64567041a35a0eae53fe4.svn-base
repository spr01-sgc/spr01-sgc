/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.soma.transmisor.dao.impl;

import com.soma.transmisor.dao.HibernateDao;
import com.soma.transmisor.dao.PersonaMoralDao;
import com.soma.transmisor.model.PersonaFisica;
import com.soma.transmisor.model.PersonaMoral;
import java.io.Serializable;
import java.util.List;
import org.hibernate.Query;
import org.hibernate.SQLQuery;
import org.springframework.stereotype.Repository;

/**
 *
 * @author LUIS-SOMA
 */
@Repository("personaMoralDao")
public class PersonaMoralDaoImpl extends HibernateDao<Integer, PersonaMoral> implements PersonaMoralDao{

    @Override
    public void update(PersonaMoral personaMoral) {
        actualizar(personaMoral);
        System.out.println("Se ha actualizado correctamente la persona moral"+ personaMoral.toString());
    }

    @Override
    public void save(PersonaMoral personaMoral) {
        guardar(personaMoral);
        System.out.println("Se ha guardado correctamente la persona moral "+ personaMoral.toString());
    }

    @Override
    public List<String> buscaPersonaMoral(String filtro, int parametro) {
        /*Query query = getSession().createQuery("FROM PersonaFisica as pf  \n"  
                + "              where pf."+filtro+"=" + parametro + "");*/
        
        SQLQuery query = getSession()
                .createSQLQuery("SELECT pem.fechaconstitucion,\n"
                        + " pem.numerofirmaavanzada, pem.razonsocial,\n"
                        + " pem.giroid_giroid, cl.clave, cl.correoelectronico,\n"
                        + " cl.rfc, d.calle, d.colonia, cp.codigopostalid,\n"
                        + " per.nombre, per.apaterno, per.amaterno, per.curp,\n"
                        + " per.sexoid_sexoid\n" 
                        + "FROM personamoral pem \n"
                        + " INNER JOIN cliente cl\n"
                        + " ON clienteid_clienteid = clienteid\n"
                        + " INNER JOIN direccion d\n"
                        + " ON direccionid_direccionid = direccionid\n"
                        + " INNER JOIN ct_codigopostal cp\n"
                        + " ON codigopostalid_codigopostalid = codigopostalid\n"
                        + " INNER JOIN personamoral_persona pm\n"
                        + " ON personamoralid = personamoral_personamoralid\n"
                        + " INNER JOIN persona per\n"
                        + " ON personaid_personaid = personaid\n"
                        + " WHERE "+filtro+"="+parametro);
        List<String> lPersona = query.list();
        
        
        
        
       return lPersona;
    }
    
}
